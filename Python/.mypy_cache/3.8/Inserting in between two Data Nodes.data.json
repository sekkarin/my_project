{".class": "MypyFile", "_fullname": "Inserting in between two Data Nodes", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Node": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "Inserting in between two Data Nodes.Node", "name": "Node", "type_vars": []}, "flags": [], "fullname": "Inserting in between two Data Nodes.Node", "metaclass_type": null, "metadata": {}, "module_name": "Inserting in between two Data Nodes", "mro": ["Inserting in between two Data Nodes.Node", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "dataval"], "flags": [], "fullname": "Inserting in between two Data Nodes.Node.__init__", "name": "__init__", "type": null}}, "dataval": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "Inserting in between two Data Nodes.Node.dataval", "name": "dataval", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "nextval": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "Inserting in between two Data Nodes.Node.nextval", "name": "nextval", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SLinkedList": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "Inserting in between two Data Nodes.SLinkedList", "name": "SLinkedList", "type_vars": []}, "flags": [], "fullname": "Inserting in between two Data Nodes.SLinkedList", "metaclass_type": null, "metadata": {}, "module_name": "Inserting in between two Data Nodes", "mro": ["Inserting in between two Data Nodes.SLinkedList", "builtins.object"], "names": {".class": "SymbolTable", "Inbetween": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "middle_node", "newdata"], "flags": [], "fullname": "Inserting in between two Data Nodes.SLinkedList.Inbetween", "name": "Inbetween", "type": null}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "Inserting in between two Data Nodes.SLinkedList.__init__", "name": "__init__", "type": null}}, "headval": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": [], "fullname": "Inserting in between two Data Nodes.SLinkedList.headval", "name": "headval", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}}}, "listprint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "Inserting in between two Data Nodes.SLinkedList.listprint", "name": "listprint", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "Inserting in between two Data Nodes.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "Inserting in between two Data Nodes.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "Inserting in between two Data Nodes.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "Inserting in between two Data Nodes.__package__", "name": "__package__", "type": "builtins.str"}}, "e2": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "Inserting in between two Data Nodes.e2", "name": "e2", "type": "Inserting in between two Data Nodes.Node"}}, "e3": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "Inserting in between two Data Nodes.e3", "name": "e3", "type": "Inserting in between two Data Nodes.Node"}}, "list": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "Inserting in between two Data Nodes.list", "name": "list", "type": "Inserting in between two Data Nodes.SLinkedList"}}}, "path": "c:\\Users\\KEN\\Documents\\GitHub\\my_project\\Python\\python datastuctue and  algorittm\\linkedkist\\Inserting in between two Data Nodes.py"}